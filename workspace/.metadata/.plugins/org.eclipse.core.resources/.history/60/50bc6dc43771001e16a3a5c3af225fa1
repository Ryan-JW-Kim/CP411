#include "Cube.hpp"
#include <iostream>

Cube::Cube()
{
	// set set cordinate values for all vertices
    // other faces
    r = 1.0;
    g = 1.0;
    b = 1.0;

    GLfloat vertex[8][3] = {};
    vertex[0] = {-1.0, -1.0,  1.0 };
	vertex[1] = {-1.0, -1.0, -1.0 };
	vertex[2] = {-1.0,  1.0, -1.0 };
	vertex[3] = {-1.0,  1.0,  1.0 };
	vertex[4] = {1.0,  -1.0,  1.0 };
	vertex[5] = {1.0,  -1.0, -1.0 };
	vertex[6] = {1.0,   1.0, -1.0 };
	vertex[7] = {1.0,   1.0,  1.0 };

    GLint face[6][4] = {};
    face[0] = { 0, 3, 2, 1 };
    face[1] = { 2, 3, 7, 6 };
	face[2] = { 4, 5, 6, 7 };
	face[3] = { 0, 1, 5, 4 };
	face[4] = { 1, 2, 6, 5 };
	face[5] = { 3, 0, 4, 7 };
}


void Cube::drawFace(int i)
{
	std::cout << "I: " << i << "      ----  " << this->face[i][0] << ", " << face[i][1]  << ", " << face[i][2] << ", " << face[i][3] << "\n";
	glBegin(GL_LINE_LOOP);
//	glVertex3fv(this->vertex[this->face[i][0]]);
//	glVertex3fv(this->vertex[this->face[i][1]]);
//	glVertex3fv(this->vertex[this->face[i][2]]);
//	glVertex3fv(this->vertex[this->face[i][3]]);
	glEnd();
}

GLfloat vertex[8][3];
GLint face[6][4];
void Cube::draw()
{
    glPushMatrix();
    this->ctmMultiply();
 	glColor3f(r, g, b);
 	for (int i = 0; i < 6; i++) {
 		this->drawFace(i);
 	}
    glPopMatrix();
}

