#include "Cube.hpp"
#include <iostream>

Cube::Cube()
{
	// set set cordinate values for all vertices
    // other faces
    r = 1.0;
    g = 1.0;
    b = 1.0;

    GLfloat vertex;
    vertex[8][3] = {
	{-1.0, -1.0,  1.0 },
	{-1.0, -1.0, -1.0 },
	{-1.0,  1.0, -1.0 },
	{-1.0,  1.0,  1.0 },
	{1.0,  -1.0,  1.0 },
	{1.0,  -1.0, -1.0 },
	{1.0,   1.0, -1.0 },
	{1.0,   1.0,  1.0 }};

    face[6][4] = {
    { 0, 3, 2, 1 },
    { 2, 3, 7, 6 },
    { 4, 5, 6, 7 },
    { 0, 1, 5, 4 },
    { 1, 2, 6, 5 },
    { 3, 0, 4, 7 }};


    std::cout << "V[0][0]: " << vertex[0][0] << endl;
}


void Cube::drawFace(int i)
{
	std::cout << face[i][0] << " -=- " << face[i][1]  << " -=- " << face[i][2] << " -=- " << face[i][3] << "\n";
	std::cout << "V[0][0]: " << vertex[0][0] << endl;
	glBegin(GL_LINE_LOOP);
	std::cout << "Start line loop" << endl;
	glVertex3fv(vertex[face[i][0]]);
	glVertex3fv(vertex[face[i][1]]);
	glVertex3fv(vertex[face[i][2]]);
	glVertex3fv(vertex[face[i][3]]);
	std::cout << "Ending line loop" << endl;
	glEnd();
}

void Cube::draw()
{
    glPushMatrix();
    this->ctmMultiply();
 	glColor3f(r, g, b);
 	for (int i = 0; i < 6; i++) {
 		this->drawFace(i);

 	}
    glPopMatrix();
}

